<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
		<!-- Tell spring-core we are using annotations -->
		<context:annotation-config></context:annotation-config>
		<context:component-scan base-package="com.example"></context:component-scan>
		<!-- Tell spring-orm that we are using their annotations -->
		<tx:annotation-driven/>
		<mvc:annotation-driven/>
		<!-- DATASOURCE
			this bean will be a JDBC instance, it is the object that holds all the attributes that is necessary to connect to the database -->
			<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
				<property name="driverClassName" value="org.mariadb.jdbc.Driver"></property>
				<property name="url" value="jdbc:mariadb://revy-senpai.c7otdgsixoyh.us-east-2.rds.amazonaws.com:3306/springdb"></property>
				<property name="username" value="springuser"></property>
				<property name="password" value="mypassword"></property>
			</bean>
		<!-- SESSION FACTORY
			this bean is a Hibernate instance, it will be responsible for creating and managing hibernate sessions -->
			<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
				<property name="dataSource" ref="dataSource"></property>
				<property name="packagesToScan" value="com.example.model"></property>
				<property name="hibernateProperties">
					<props>
						<prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</prop>
						<prop key="hibernate.show_sql">false</prop>
						<prop key="hibernate.format_sql">false</prop>
						<prop key="hibernate.hbm2ddl.auto">update</prop>
					</props>
				</property>
			</bean>
			<!-- Transaction Manager 
				This is a hibernate instance, it is responsible for managing your transactions
				PROGRAMMATIC TRANSACTION MANAGEMENT
					our transactions are hard coded into our source code, it is hard coding our transaction logic inbetween our business logic
					making the transaction management boiler plate code
				DECLARATIVE TRANSACTION MANAGEMENT
					Allow us to manage transactions through configurations, to seperate or transaction logic from our business logic
				SCOPE OF TRANSACTION MANAGEMENT
					-Global Transactions: Where transactions occur between different DB, it is also called distributed transaction processing
						this occurs on the server level, it is a very complex process that is often used in micro service applications
					-Local Transactions: Where the transactions occurs between the application and a single RDBMS
			-->
			<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
				<property name="sessionFactory" ref="sessionFactory"></property>
			</bean>
		
		
		</beans>